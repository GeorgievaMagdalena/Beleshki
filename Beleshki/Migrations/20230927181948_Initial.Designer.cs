// <auto-generated />
using System;
using Beleshki.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Beleshki.Migrations
{
    [DbContext(typeof(BeleshkiContext))]
    [Migration("20230927181948_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Beleshki.Models.Beleshka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BeleshkaIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumKreiranje")
                        .HasColumnType("datetime2");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.ToTable("Beleshka");
                });

            modelBuilder.Entity("Beleshki.Models.Fakultet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FakultetIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniverzitetIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fakultet");
                });

            modelBuilder.Entity("Beleshki.Models.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeleshkaId")
                        .HasColumnType("int");

                    b.Property<int?>("Ocenka")
                        .HasColumnType("int");

                    b.Property<string>("StudentIme")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("komentar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BeleshkaId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("Beleshki.Models.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Institut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Krediti")
                        .HasColumnType("int");

                    b.Property<string>("PredmetIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudiskaGodina")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("Beleshki.Models.PredmetFakultet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FakultetId")
                        .HasColumnType("int");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FakultetId");

                    b.HasIndex("PredmetId");

                    b.ToTable("PredmetFakultet");
                });

            modelBuilder.Entity("Beleshki.Models.StudentBeleshki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeleshkaId")
                        .HasColumnType("int");

                    b.Property<string>("StudentIme")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BeleshkaId");

                    b.ToTable("StudentBeleshki");
                });

            modelBuilder.Entity("Beleshki.Models.Beleshka", b =>
                {
                    b.HasOne("Beleshki.Models.Predmet", "Predmet")
                        .WithMany("Beleshki")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");
                });

            modelBuilder.Entity("Beleshki.Models.Komentar", b =>
                {
                    b.HasOne("Beleshki.Models.Beleshka", "Beleshka")
                        .WithMany("komentari")
                        .HasForeignKey("BeleshkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beleshka");
                });

            modelBuilder.Entity("Beleshki.Models.PredmetFakultet", b =>
                {
                    b.HasOne("Beleshki.Models.Fakultet", "Fakultet")
                        .WithMany("predmetiFakultet")
                        .HasForeignKey("FakultetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beleshki.Models.Predmet", "Predmet")
                        .WithMany("predmetFakulteti")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakultet");

                    b.Navigation("Predmet");
                });

            modelBuilder.Entity("Beleshki.Models.StudentBeleshki", b =>
                {
                    b.HasOne("Beleshki.Models.Beleshka", "Beleshka")
                        .WithMany("studentiBeleshki")
                        .HasForeignKey("BeleshkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beleshka");
                });

            modelBuilder.Entity("Beleshki.Models.Beleshka", b =>
                {
                    b.Navigation("komentari");

                    b.Navigation("studentiBeleshki");
                });

            modelBuilder.Entity("Beleshki.Models.Fakultet", b =>
                {
                    b.Navigation("predmetiFakultet");
                });

            modelBuilder.Entity("Beleshki.Models.Predmet", b =>
                {
                    b.Navigation("Beleshki");

                    b.Navigation("predmetFakulteti");
                });
#pragma warning restore 612, 618
        }
    }
}
